parameters:
  serviceConnection: ''
  svcPrincipalClientId: ''
  svcPrincipalSecret: ''
  azureTenantId: ''
  appServiceName: ''
  containerRegistryName: ''
  imageRepositoryName: ''
  env: ''
  apteanTenantId: ''
  storeUrl: ''
  adminEmail: ''
  adminPassword: 
  sqlConnString: ''
  sqlCommandTimeout: ''
  b2cClientId: ''
  b2cTenantId: ''
  b2cDomainHost: ''
  b2cPolicyName: ''
  b2cRedirectUri: ''
  b2cDomainHint: ''
  friendlyName: ''
  apteanPayApiUrl: ''
  merchantPortalUrl: ''
  wepayAppId: ''
  wepayEnv: ''
  wepayApiVersion: ''
  wepayApiKey: ''
  useHttpClusterHttps: ''
  useHttpXForwardedProto: ''
  forwardedHttpHeader: ''
  displayFullErrorStack: ''
  blobStorageConnString: ''
  blobStorageContainerName: ''
  blobStorageEndpoint: ''
  blobStorageAppendContainerName: ''
  useBlobStorageToStoreKeys: ''
  blobStorageContainerNameForKeys: ''
  keyVaultIdForKeys: ''
  enableRedis: ''
  redisDatabaseId: ''
  redisConnString: ''
  useRedisToStoreKeys: ''
  useRedisForCaching: ''
  ignoreRedisTimeoutException: ''
  useRedisToStorePluginsInfo: ''
  userAgentStringsPath: ''
  crawlerOnlyUserAgentStringsPath: ''
  disableSampleDataDuringInstallation: ''
  pluginsIgnoredDuringInstallation: ''
  clearPluginShadowDirOnStartup: ''
  copyLockedPluginAssemblies: ''
  usePluginShadowCopy: ''
  useUnsafeLoadAssembly: ''
  useSessionStateTempDataProvider: ''
  apteanLanguagePluginApiUrl: ''

steps:
- pwsh: |
    az login --service-principal -u $env:SP_CLIENT_ID -p $env:SP_SECRET --tenant $env:AZURE_TENANT_ID
    $tag = az acr repository show-tags --name $env:CONTAINER_REGISTRY_NAME --repository $env:IMAGE_REPOSITORY_NAME --top 1 --orderby time_desc | ConvertFrom-Json
    Write-Host "The latest tag is $tag"
    Write-Host "##vso[task.setvariable variable=latestTag;]$tag"
  displayName: Get Latest Tag
  name: GetLatestTag
  env:
    SP_CLIENT_ID: ${{ parameters.svcPrincipalClientId }}
    SP_SECRET: ${{ parameters.svcPrincipalSecret }}
    AZURE_TENANT_ID: ${{ parameters.azureTenantId }}  
    CONTAINER_REGISTRY_NAME: ${{ parameters.containerRegistryName }}
    IMAGE_REPOSITORY_NAME: ${{ parameters.imageRepositoryName }}

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    ConnectedServiceName: ${{ parameters.serviceConnection }}
    appType: 'webAppContainer'
    WebAppName: ${{ parameters.appServiceName }}
    DockerNamespace: ${{ parameters.containerRegistryName }}
    DockerRepository: ${{ parameters.imageRepositoryName }}
    DockerImageTag: $(latestTag)
    AppSettings: |    
      -ECOMM_ECOMMERCE_STORE_FRONT_VERSION $(latestTag) 
      -ECOMM_TENANT_ID ${{ parameters.apteanTenantId }} 
      -ECOMM_SQL_CONNECTION_STRING "${{ parameters.sqlConnString }}" 
      -ECOMM_STORE_ADMIN_EMAIL ${{ parameters.adminEmail }} 
      -ECOMM_STORE_ADMIN_PWD ${{ parameters.adminPassword }} 
      -ECOMM_APTEAN_ID_PLUGIN_B2C_CLIENT_ID ${{ parameters.b2cClientId }} 
      -ECOMM_APTEAN_ID_PLUGIN_B2C_DOMAIN_HOST ${{ parameters.b2cDomainHost }} 
      -ECOMM_APTEAN_ID_PLUGIN_B2C_TENANT_ID ${{ parameters.b2cTenantId }} 
      -ECOMM_APTEAN_ID_PLUGIN_B2C_POLICY_NAME ${{ parameters.b2cPolicyName }} 
      -ECOMM_APTEAN_ID_PLUGIN_REDIRECT_URI ${{ parameters.storeUrl }} 
      -ECOMM_APTEAN_ID_PLUGIN_DOMAIN_HINT "${{ parameters.b2cDomainHint }}" 
      -ECOMM_APTEAN_ID_PLUGIN_FRIENDLY_NAME "${{ parameters.friendlyName }}" 
      -ECOMM_APTEAN_PAY_PLUGIN_WEPAY_APP_ID ${{ parameters.wepayAppId }} 
      -ECOMM_APTEAN_PAY_PLUGIN_WEPAY_ENVIRONMENT ${{ parameters.wepayEnv }} 
      -ECOMM_APTEAN_PAY_PLUGIN_WEPAY_API_VERSION ${{ parameters.wepayApiVersion }} 
      -ECOMM_APTEAN_PAY_PLUGIN_WEPAY_API_KEY ${{ parameters.wepayApiKey }} 
      -ECOMM_APTEAN_PAY_PLUGIN_API_URL ${{ parameters.apteanPayApiUrl }} 
      -ECOMM_APTEAN_PAY_PLUGIN_MERCHANT_PORTAL_URL ${{ parameters.merchantPortalUrl }} 
      -ECOMM_APTEAN_LANGUAGE_PLUGIN_API_URL ${{ parameters.apteanLanguagePluginApiUrl }} 
      -ECOMM_STORE_URL ${{ parameters.storeUrl }} 
      -ECOMM_Hosting__UseHttpClusterHttps ${{ parameters.useHttpClusterHttps }} 
      -ECOMM_Hosting__UseHttpXForwardedProto ${{ parameters.useHttpXForwardedProto }} 
      -ECOMM_Hosting__ForwardedHttpHeader ${{ parameters.forwardedHttpHeader }} 
      -ECOMM_Nop__DisplayFullErrorStack ${{ parameters.displayFullErrorStack }} 
      -ECOMM_Nop__AzureBlobStorageConnectionString ${{ parameters.blobStorageConnString }} 
      -ECOMM_Nop__AzureBlobStorageContainerName ${{ parameters.blobStorageContainerName }} 
      -ECOMM_Nop__AzureBlobStorageEndPoint ${{ parameters.blobStorageEndpoint }} 
      -ECOMM_Nop__AzureBlobStorageAppendContainerName ${{ parameters.blobStorageAppendContainerName }} 
      -ECOMM_Nop__UseAzureBlobStorageToStoreDataProtectionKeys ${{ parameters.useBlobStorageToStoreKeys }} 
      -ECOMM_Nop__AzureBlobStorageContainerNameForDataProtectionKeys ${{ parameters.blobStorageContainerNameForKeys }} 
      -ECOMM_Nop__AzureKeyVaultIdForDataProtectionKeys ${{ parameters.keyVaultIdForKeys }} 
      -ECOMM_Nop__RedisEnabled ${{ parameters.enableRedis }} 
      -ECOMM_Nop__RedisDatabaseId ${{ parameters.redisDatabaseId }} 
      -ECOMM_Nop__RedisConnectionString ${{ parameters.redisConnString }} 
      -ECOMM_Nop__UseRedisToStoreDataProtectionKeys ${{ parameters.useRedisToStoreKeys }} 
      -ECOMM_Nop__UseRedisForCaching ${{ parameters.useRedisForCaching }} 
      -ECOMM_Nop__IgnoreRedisTimeoutException ${{ parameters.ignoreRedisTimeoutException }} 
      -ECOMM_Nop__UseRedisToStorePluginsInfo ${{ parameters.useRedisToStorePluginsInfo }} 
      -ECOMM_Nop__UserAgentStringsPath ${{ parameters.userAgentStringsPath }} 
      -ECOMM_Nop__CrawlerOnlyUserAgentStringsPath ${{ parameters.crawlerOnlyUserAgentStringsPath }} 
      -ECOMM_Nop__DisableSampleDataDuringInstallation ${{ parameters.disableSampleDataDuringInstallation }} 
      -ECOMM_Nop__PluginsIgnoredDuringInstallation ${{ parameters.pluginsIgnoredDuringInstallation }} 
      -ECOMM_Nop__ClearPluginShadowDirectoryOnStartup ${{ parameters.clearPluginShadowDirOnStartup }} 
      -ECOMM_Nop__CopyLockedPluginAssembilesToSubdirectoriesOnStartup ${{ parameters.copyLockedPluginAssemblies }} 
      -ECOMM_Nop__UsePluginsShadowCopy ${{ parameters.usePluginShadowCopy }} 
      -ECOMM_Nop__UseUnsafeLoadAssembly ${{ parameters.useUnsafeLoadAssembly }} 
      -ECOMM_Nop__SQLCommandTimeout ${{ parameters.sqlCommandTimeout }} 
      -ECOMM_Nop__UseSessionStateTempDataProvider ${{ parameters.useSessionStateTempDataProvider }} 


