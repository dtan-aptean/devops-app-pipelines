trigger: none

resources:
  pipelines:
  - pipeline: ecomm-sf-docker-build-push
    source: ecomm-sf-docker-build-push
    trigger:
      branches:
        include:
        - master

variables:
- group: helm-chart-svc-principal-config

stages:
- stage: DEV_Ecomm_SF_Helm_Deploy
  displayName: DEV - Ecomm Storefront Helm Deploy

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: ecomm-dev

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: ecomm-sf-dev-k8s
    - template: helm-variables-dev.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-DEV-TST-STG'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_SHR)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_SHR)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              frontDoorId: $(FRONT_DOOR_ID)
              kongIngressClass: $(KONG_INGRESS_CLASS)
              kongIngressUpstreamHostHeader: $(KONG_INGRESS_UPSTREAM_HEADER)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              apteanTenantId: $(APTEAN_TENANT_ID)
              storeUrl: $(STORE_URL)
              adminEmail: $(ADMIN_EMAIL)
              adminPassword: $(ADMIN_PASSWORD)
              sqlConnString: $(SQL_CONN_STRING)
              sqlCommandTimeout: $(SQL_COMMAND_TIMEOUT)
              b2cClientId: $(B2C_CLIENT_ID)
              b2cTenantId: $(B2C_TENANT_ID)
              b2cDomainHost: $(B2C_DOMAIN_HOST)
              b2cPolicyName: $(B2C_POLICY_NAME)
              b2cRedirectUri: $(B2C_REDIRECT_URI)
              b2cDomainHint: $(B2C_DOMAIN_HINT)
              friendlyName: $(FRIENDLY_NAME)
              apteanPayApiUrl: $(APTEAN_PAY_API_URL)
              merchantPortalUrl: $(MERCHANT_PORTAL_URL)
              wepayAppId: $(WEPAY_APP_ID)
              wepayEnv: $(WEPAY_ENV)
              wepayApiVersion: $(WEPAY_API_VERSION)
              wepayApiKey: $(WEPAY_APP_TOKEN)
              useHttpClusterHttps: $(USE_HTTP_CLUSTER_HTTPS)
              useHttpXForwardedProto: $(USE_HTTP_X_FORWARDED_PROTO)
              forwardedHttpHeader: $(FORWARDED_HTTP_HEADER)
              displayFullErrorStack: $(DISPLAY_FULL_ERROR_STACK)
              blobStorageConnString: $(BLOB_STORAGE_CONN_STRING)
              blobStorageContainerName: $(BLOB_STORAGE_CONTAINER_NAME)
              blobStorageEndpoint: $(BLOB_STORAGE_ENDPOINT)
              blobStorageAppendContainerName: $(BLOB_STORAGE_APPEND_CONTAINER_NAME)
              useBlobStorageToStoreKeys: $(USE_BLOB_STORAGE_TO_STORE_KEYS)
              blobStorageContainerNameForKeys: $(BLOB_STORAGE_CONTAINER_NAME_FOR_KEYS)
              keyVaultIdForKeys: $(KEY_VAULT_ID_FOR_KEYS)
              enableRedis: $(ENABLE_REDIS)
              redisDatabaseId: $(REDIS_DATABASE_ID)
              redisConnString: $(REDIS_CONN_STRING)
              useRedisToStoreKeys: $(USE_REDIS_TO_STORE_KEYS)
              useRedisForCaching: $(USE_REDIS_FOR_CACHING)
              ignoreRedisTimeoutException: $(IGNORE_REDIS_TIMEOUT_EXCEPTION)
              useRedisToStorePluginsInfo: $(USE_REDIS_TO_STORE_PLUGINS_INFO)
              userAgentStringsPath: $(USER_AGENT_STRINGS_PATH)
              crawlerOnlyUserAgentStringsPath: $(CRAWLER_ONLY_USER_AGENT_STRINGS_PATH)
              disableSampleDataDuringInstallation: $(DISABLE_SAMPLE_DATA_DURING_INSTALLATION)
              pluginsIgnoredDuringInstallation: $(PLUGINS_IGNORED_DURING_INSTALLATION)
              clearPluginShadowDirOnStartup: $(CLEAR_PLUGIN_SHADOW_DIR_ON_STARTUP)
              copyLockedPluginAssemblies: $(COPY_LOCKED_PLUGIN_ASSEMBLIES)
              usePluginShadowCopy: $(USE_PLUGIN_SHADOW_COPY)
              useUnsafeLoadAssembly: $(USE_UNSAFE_LOAD_ASSEMBLY)
              useSessionStateTempDataProvider: $(USE_SESSION_STATE_TEMP_DATA_PROVIDER)
              apteanLanguagePluginApiUrl: $(APTEAN_LANGUAGE_PLUGIN_API_URL)
              eventsIngressConnString: $(EVENTS_INGRESS_CONN_STRING)
              eventsIngressDestination: $(EVENTS_INGRESS_DESTINATION)            

