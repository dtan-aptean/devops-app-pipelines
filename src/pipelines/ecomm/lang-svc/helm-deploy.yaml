trigger: none

resources:
  pipelines:
  - pipeline: ecomm-lang-svc-docker-build-push
    source: ecomm-lang-svc-docker-build-push
    trigger:
      branches:
        include:
        - master

variables:
- group: helm-chart-svc-principal-config

stages:
- stage: DEV_Ecomm_Lang_Svc_Helm_Deploy
  displayName: DEV - Ecomm Language Svc Helm Deploy

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: ecomm-dev

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: ecomm-lang-svc-dev
    - template: helm-variables-dev.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-DEV-TST-STG'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_SHR)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_SHR)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              frontDoorId: $(FRONT_DOOR_ID)
              kongIngressClass: $(KONG_INGRESS_CLASS)
              kongIngressUpstreamHostHeader: $(KONG_INGRESS_UPSTREAM_HEADER)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              cacheRetainSeconds: $(ECOMM_CACHE_RETAIN_SECONDS)
              cosmosConnString: $(COSMOSDB_CONN_STRING)
              cosmosDatabaseName: $(COSMOSDB_LANGUAGE_SVC_DATABASE)
              cosmosContainerName: $(COSMOSDB_COLLECTION_NAME)
              nodeSelectorPool: $(NODE_SELECTOR_POOL)