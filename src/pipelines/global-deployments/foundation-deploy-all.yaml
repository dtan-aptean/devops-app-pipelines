trigger: none

variables:
- group: helm-chart-svc-principal-config

stages:

## Comms API Svc

- stage: TST_Comms_API_Svc_Helm_Deploy
  displayName: TST - comms-api-svc Helm Deploy
  dependsOn: []

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: comms-tst

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: comms-api-svc-tst
    - template: ../comms/helm-variables-tst.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../comms/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-DEV-TST-STG'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_SHR)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_SHR)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              frontDoorId: $(FRONT_DOOR_ID)
              kongIngressClass: $(KONG_INGRESS_CLASS)
              kongIngressUpstreamHostHeader: $(KONG_INGRESS_UPSTREAM_HEADER)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              appInsightsKey: $(APP_INSIGHTS_INSTRUMENTATION_KEY)
              cosmosConnString: $(COSMOSDB_CONN_STRING)
              cosmosDatabase: $(COSMOSDB_COMMS_API_SVC_DATABASE)
              cosmosContainer: $(COSMOSDB_COMMS_API_SVC_CONTAINER)
              serviceBusConnectionString: $(SB_CONN_STRING)
              managementConnectionString: $(SB_MANAGEMENT_CONN_STRING)
              sbSmsReqQueue: $(SB_SMS_REQ_QUEUE)
              sbEmailReqQueue: $(SB_EMAIL_REQ_QUEUE)
              sbEventsTopic: $(SB_EVENTS_TOPIC)
              sbPlatformEventsSubscription: $(SB_PLATFORM_EVENTS_SUBSCRIPTION)
              b2cClientId: $(B2C_CLIENT_ID)
              b2cDomainHost: $(B2C_DOMAIN_HOST)
              b2cTenantId: $(B2C_TENANT_ID)
              b2cPolicyName: $(B2C_POLICY_NAME)
              subsMgmtGrpcUrl: $(GRPC_URL_SUBS_MGMT)
              subsMgmtServiceId: $(SUBS_MGMT_SERVICE_ID)
              subsMgmtApiKey: $(SUBS_MGMT_API_KEY)
              smsFromPhoneNumber: $(SMS_FROM_PHONE_NUMBER)
              processPlatformEvents: $(PROCESS_PLATFORM_EVENTS)
              batchSize: $(BATCH_SIZE)
              executionMode: $(EXECUTION_MODE)
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

- stage: STG_Comms_API_Svc_Helm_Deploy
  displayName: STG - comms-api-svc Helm Deploy
  dependsOn: TST_Comms_API_Svc_Helm_Deploy

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: comms-stg

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: comms-api-svc-stg
    - template: ../comms/helm-variables-stg.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../comms/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-DEV-TST-STG'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_SHR)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_SHR)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              frontDoorId: $(FRONT_DOOR_ID)
              kongIngressClass: $(KONG_INGRESS_CLASS)
              kongIngressUpstreamHostHeader: $(KONG_INGRESS_UPSTREAM_HEADER)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              appInsightsKey: $(APP_INSIGHTS_INSTRUMENTATION_KEY)
              cosmosConnString: $(COSMOSDB_CONN_STRING)
              cosmosDatabase: $(COSMOSDB_COMMS_API_SVC_DATABASE)
              cosmosContainer: $(COSMOSDB_COMMS_API_SVC_CONTAINER)
              serviceBusConnectionString: $(SB_CONN_STRING)
              managementConnectionString: $(SB_MANAGEMENT_CONN_STRING)
              sbSmsReqQueue: $(SB_SMS_REQ_QUEUE)
              sbEmailReqQueue: $(SB_EMAIL_REQ_QUEUE)
              sbEventsTopic: $(SB_EVENTS_TOPIC)
              sbPlatformEventsSubscription: $(SB_PLATFORM_EVENTS_SUBSCRIPTION)
              b2cClientId: $(B2C_CLIENT_ID)
              b2cDomainHost: $(B2C_DOMAIN_HOST)
              b2cTenantId: $(B2C_TENANT_ID)
              b2cPolicyName: $(B2C_POLICY_NAME)
              subsMgmtGrpcUrl: $(GRPC_URL_SUBS_MGMT)
              subsMgmtServiceId: $(SUBS_MGMT_SERVICE_ID)
              subsMgmtApiKey: $(SUBS_MGMT_API_KEY)
              smsFromPhoneNumber: $(SMS_FROM_PHONE_NUMBER)
              processPlatformEvents: $(PROCESS_PLATFORM_EVENTS)
              batchSize: $(BATCH_SIZE)
              executionMode: $(EXECUTION_MODE)
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

- stage: PRD_Comms_API_Svc_Helm_Deploy
  displayName: PRD - comms-api-svc Helm Deploy
  dependsOn: STG_Comms_API_Svc_Helm_Deploy

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: comms-prd

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: comms-api-svc-prd
    - template: ../comms/helm-variables-prd.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../comms/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-PRD'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_PRD)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_PRD)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              frontDoorId: $(FRONT_DOOR_ID)
              kongIngressClass: $(KONG_INGRESS_CLASS)
              kongIngressUpstreamHostHeader: $(KONG_INGRESS_UPSTREAM_HEADER)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              appInsightsKey: $(APP_INSIGHTS_INSTRUMENTATION_KEY)
              cosmosConnString: $(COSMOSDB_CONN_STRING)
              cosmosDatabase: $(COSMOSDB_COMMS_API_SVC_DATABASE)
              cosmosContainer: $(COSMOSDB_COMMS_API_SVC_CONTAINER)
              serviceBusConnectionString: $(SB_CONN_STRING)
              managementConnectionString: $(SB_MANAGEMENT_CONN_STRING)
              sbSmsReqQueue: $(SB_SMS_REQ_QUEUE)
              sbEmailReqQueue: $(SB_EMAIL_REQ_QUEUE)
              sbEventsTopic: $(SB_EVENTS_TOPIC)
              sbPlatformEventsSubscription: $(SB_PLATFORM_EVENTS_SUBSCRIPTION)
              b2cClientId: $(B2C_CLIENT_ID)
              b2cDomainHost: $(B2C_DOMAIN_HOST)
              b2cTenantId: $(B2C_TENANT_ID)
              b2cPolicyName: $(B2C_POLICY_NAME)
              subsMgmtGrpcUrl: $(GRPC_URL_SUBS_MGMT)
              subsMgmtServiceId: $(SUBS_MGMT_SERVICE_ID)
              subsMgmtApiKey: $(SUBS_MGMT_API_KEY)
              smsFromPhoneNumber: $(SMS_FROM_PHONE_NUMBER)
              processPlatformEvents: $(PROCESS_PLATFORM_EVENTS)
              batchSize: $(BATCH_SIZE)
              executionMode: $(EXECUTION_MODE)
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

## Subs Mgmt

- stage: TST_Subs_Mgmt_GQL_API_Svc_Helm_Deploy
  displayName: TST - subs mgmt gql api-svc Helm Deploy
  dependsOn: []

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: subs-mgmt-tst

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: subs-mgmt-api-svc-tst
    - template: ../subs-mgmt/helm-variables-tst.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../subs-mgmt/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-DEV-TST-STG'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_SHR)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_SHR)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)-gql
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              frontDoorId: $(FRONT_DOOR_ID)
              kongIngressClass: $(KONG_INGRESS_CLASS)
              kongIngressUpstreamHostHeader: $(KONG_INGRESS_UPSTREAM_HEADER)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              b2cClientId: $(B2C_CLIENT_ID)
              b2cDomainHost: $(B2C_DOMAIN_HOST)
              b2cTenantId: $(B2C_TENANT_ID)
              b2cPolicyName: $(B2C_POLICY_NAME)
              appInsightsKey: $(APP_INSIGHTS_INSTRUMENTATION_KEY)
              serviceBusConnectionString: $(SB_CONN_STRING)
              sbEventsTopic: $(SB_EVENTS_TOPIC)
              sbPlatformEventsSubscription: $(SB_PLATFORM_EVENTS_SUBSCRIPTION)
              cosmosConnString: $(COSMOSDB_CONN_STRING)
              cosmosDatabase: $(COSMOSDB_SUBS_MGMT_DATABASE)
              cosmosContainer: $(COSMOSDB_SUBS_MGMT_CONTAINER)
              apiKind: GQL
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

- stage: TST_Subs_Mgmt_GRPC_API_Svc_Helm_Deploy
  displayName: TST - subs mgmt grpc api-svc Helm Deploy
  dependsOn: []

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: subs-mgmt-tst

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: subs-mgmt-api-svc-tst
    - template: ../subs-mgmt/helm-variables-tst.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../subs-mgmt/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-DEV-TST-STG'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_SHR)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_SHR)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)-grpc
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              frontDoorId: $(FRONT_DOOR_ID)
              kongIngressClass: $(KONG_INGRESS_CLASS)
              kongIngressUpstreamHostHeader: $(KONG_INGRESS_UPSTREAM_HEADER)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              b2cClientId: $(B2C_CLIENT_ID)
              b2cDomainHost: $(B2C_DOMAIN_HOST)
              b2cTenantId: $(B2C_TENANT_ID)
              b2cPolicyName: $(B2C_POLICY_NAME)
              appInsightsKey: $(APP_INSIGHTS_INSTRUMENTATION_KEY)
              serviceBusConnectionString: $(SB_CONN_STRING)
              sbEventsTopic: $(SB_EVENTS_TOPIC)
              sbPlatformEventsSubscription: $(SB_PLATFORM_EVENTS_SUBSCRIPTION)
              cosmosConnString: $(COSMOSDB_CONN_STRING)
              cosmosDatabase: $(COSMOSDB_SUBS_MGMT_DATABASE)
              cosmosContainer: $(COSMOSDB_SUBS_MGMT_CONTAINER)
              apiKind: GRPC
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

- stage: STG_Subs_Mgmt_GQL_API_Svc_Helm_Deploy
  displayName: STG - subs mgmt gql api-svc Helm Deploy
  dependsOn: TST_Subs_Mgmt_GQL_API_Svc_Helm_Deploy

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: subs-mgmt-stg

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: subs-mgmt-api-svc-stg
    - template: ../subs-mgmt/helm-variables-stg.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../subs-mgmt/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-DEV-TST-STG'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_SHR)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_SHR)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)-gql
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              frontDoorId: $(FRONT_DOOR_ID)
              kongIngressClass: $(KONG_INGRESS_CLASS)
              kongIngressUpstreamHostHeader: $(KONG_INGRESS_UPSTREAM_HEADER)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              b2cClientId: $(B2C_CLIENT_ID)
              b2cDomainHost: $(B2C_DOMAIN_HOST)
              b2cTenantId: $(B2C_TENANT_ID)
              b2cPolicyName: $(B2C_POLICY_NAME)
              appInsightsKey: $(APP_INSIGHTS_INSTRUMENTATION_KEY)
              serviceBusConnectionString: $(SB_CONN_STRING)
              sbEventsTopic: $(SB_EVENTS_TOPIC)
              sbPlatformEventsSubscription: $(SB_PLATFORM_EVENTS_SUBSCRIPTION)
              cosmosConnString: $(COSMOSDB_CONN_STRING)
              cosmosDatabase: $(COSMOSDB_SUBS_MGMT_DATABASE)
              cosmosContainer: $(COSMOSDB_SUBS_MGMT_CONTAINER)
              apiKind: GQL
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

- stage: STG_Subs_Mgmt_GRPC_API_Svc_Helm_Deploy
  displayName: STG - subs mgmt grpc api-svc Helm Deploy
  dependsOn: TST_Subs_Mgmt_GRPC_API_Svc_Helm_Deploy

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: subs-mgmt-stg

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: subs-mgmt-api-svc-stg
    - template: ../subs-mgmt/helm-variables-stg.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../subs-mgmt/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-DEV-TST-STG'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_SHR)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_SHR)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)-grpc
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              frontDoorId: $(FRONT_DOOR_ID)
              kongIngressClass: $(KONG_INGRESS_CLASS)
              kongIngressUpstreamHostHeader: $(KONG_INGRESS_UPSTREAM_HEADER)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              b2cClientId: $(B2C_CLIENT_ID)
              b2cDomainHost: $(B2C_DOMAIN_HOST)
              b2cTenantId: $(B2C_TENANT_ID)
              b2cPolicyName: $(B2C_POLICY_NAME)
              appInsightsKey: $(APP_INSIGHTS_INSTRUMENTATION_KEY)
              serviceBusConnectionString: $(SB_CONN_STRING)
              sbEventsTopic: $(SB_EVENTS_TOPIC)
              sbPlatformEventsSubscription: $(SB_PLATFORM_EVENTS_SUBSCRIPTION)
              cosmosConnString: $(COSMOSDB_CONN_STRING)
              cosmosDatabase: $(COSMOSDB_SUBS_MGMT_DATABASE)
              cosmosContainer: $(COSMOSDB_SUBS_MGMT_CONTAINER)
              apiKind: GRPC
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

- stage: PRD_Subs_Mgmt_GQL_API_Svc_Helm_Deploy
  displayName: PRD - subs mgmt gql api-svc Helm Deploy
  dependsOn: STG_Subs_Mgmt_GQL_API_Svc_Helm_Deploy

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: subs-mgmt-prd

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: subs-mgmt-api-svc-prd
    - template: ../subs-mgmt/helm-variables-prd.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../subs-mgmt/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-PRD'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_PRD)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_PRD)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)-gql
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              frontDoorId: $(FRONT_DOOR_ID)
              kongIngressClass: $(KONG_INGRESS_CLASS)
              kongIngressUpstreamHostHeader: $(KONG_INGRESS_UPSTREAM_HEADER)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              b2cClientId: $(B2C_CLIENT_ID)
              b2cDomainHost: $(B2C_DOMAIN_HOST)
              b2cTenantId: $(B2C_TENANT_ID)
              b2cPolicyName: $(B2C_POLICY_NAME)
              appInsightsKey: $(APP_INSIGHTS_INSTRUMENTATION_KEY)
              serviceBusConnectionString: $(SB_CONN_STRING)
              sbEventsTopic: $(SB_EVENTS_TOPIC)
              sbPlatformEventsSubscription: $(SB_PLATFORM_EVENTS_SUBSCRIPTION)
              cosmosConnString: $(COSMOSDB_CONN_STRING)
              cosmosDatabase: $(COSMOSDB_SUBS_MGMT_DATABASE)
              cosmosContainer: $(COSMOSDB_SUBS_MGMT_CONTAINER)
              apiKind: GQL
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

- stage: PRD_Subs_Mgmt_GRPC_API_Svc_Helm_Deploy
  displayName: PRD - subs mgmt grpc api-svc Helm Deploy
  dependsOn: STG_Subs_Mgmt_GRPC_API_Svc_Helm_Deploy

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: subs-mgmt-prd

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: subs-mgmt-api-svc-prd
    - template: ../subs-mgmt/helm-variables-prd.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../subs-mgmt/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-PRD'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_PRD)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_PRD)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)-grpc
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              frontDoorId: $(FRONT_DOOR_ID)
              kongIngressClass: $(KONG_INGRESS_CLASS)
              kongIngressUpstreamHostHeader: $(KONG_INGRESS_UPSTREAM_HEADER)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              b2cClientId: $(B2C_CLIENT_ID)
              b2cDomainHost: $(B2C_DOMAIN_HOST)
              b2cTenantId: $(B2C_TENANT_ID)
              b2cPolicyName: $(B2C_POLICY_NAME)
              appInsightsKey: $(APP_INSIGHTS_INSTRUMENTATION_KEY)
              serviceBusConnectionString: $(SB_CONN_STRING)
              sbEventsTopic: $(SB_EVENTS_TOPIC)
              sbPlatformEventsSubscription: $(SB_PLATFORM_EVENTS_SUBSCRIPTION)
              cosmosConnString: $(COSMOSDB_CONN_STRING)
              cosmosDatabase: $(COSMOSDB_SUBS_MGMT_DATABASE)
              cosmosContainer: $(COSMOSDB_SUBS_MGMT_CONTAINER)
              apiKind: GRPC
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

## Events Stream Svc

## Events Stream Svc - Ecomm
- stage: TST_Events_Svc_Ecomm_Helm_Deploy
  displayName: TST - Events Svc Ecomm Helm Deploy
  dependsOn: []

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: events-tst

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: events-svc-tst
    - template: ../foundational/events-svc/helm-variables-tst.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../foundational/events-svc/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-DEV-TST-STG'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_SHR)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_SHR)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              mongoDbConnString: $(MONGODB_CONN_STRING)
              mongoDbName: $(MONGODB_DB_NAME)
              mongoDbCollectionName: $(MONGODB_COLLECTION_NAME)
              serviceBusConnectionString: $(SB_CONN_STRING)
              eventHubConnectionString: $(EVENT_HUB_CONN_STRING)
              streamName: $(STREAM_NAME_ECOMM)
              ingressName: $(INGRESS_NAME_ECOMM)
              egressName: $(EGRESS_NAME_ECOMM)
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

- stage: STG_Events_Svc_Ecomm_Helm_Deploy
  displayName: STG - Events Svc Ecomm Helm Deploy
  dependsOn: TST_Events_Svc_Ecomm_Helm_Deploy

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: events-stg

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: events-svc-stg
    - template: ../foundational/events-svc/helm-variables-stg.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../foundational/events-svc/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-DEV-TST-STG'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_SHR)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_SHR)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              mongoDbConnString: $(MONGODB_CONN_STRING)
              mongoDbName: $(MONGODB_DB_NAME)
              mongoDbCollectionName: $(MONGODB_COLLECTION_NAME)
              serviceBusConnectionString: $(SB_CONN_STRING)
              eventHubConnectionString: $(EVENT_HUB_CONN_STRING)
              streamName: $(STREAM_NAME_ECOMM)
              ingressName: $(INGRESS_NAME_ECOMM)
              egressName: $(EGRESS_NAME_ECOMM)
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

- stage: PRD_Events_Svc_Ecomm_Helm_Deploy
  displayName: PRD - Events Svc Ecomm Helm Deploy
  dependsOn: STG_Events_Svc_Ecomm_Helm_Deploy

  jobs:
  - deployment: Helm_Deploy
    displayName: Helm Deploy
    environment: events-prd

    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: events-svc-prd
    - template: ../foundational/events-svc/helm-variables-prd.yaml

    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../events/stream-svc/helm-deploy-step.yaml
            parameters:
              serviceConnection: 'AzDevOps-Pipeline-Principal-PRD'
              svcPrincipalClientId: $(SVC_PRINCIPAL_CLIENT_ID_PRD)
              svcPrincipalSecret: $(SVC_PRINCIPAL_SECRET_PRD)
              azureTenantId: $(AZURE_TENANT_ID)
              aksName: $(AKS_NAME)
              aksResourceGroup: $(AKS_RESOURCE_GROUP)
              containerRegistryName: $(CONTAINER_REGISTRY_NAME)
              imageRepositoryName: $(IMAGE_REPOSITORY_NAME)
              chartRepositoryName: $(CHART_REPOSITORY_NAME)
              k8sNamespace: $(K8S_NAMESPACE)
              helmReleaseName: $(HELM_RELEASE_NAME)
              chartName: $(CHART_NAME)
              env: $(ENV)
              replicas: $(REPLICAS)
              resourceLimitsCpu: $(RESOURCE_LIMITS_CPU)
              resourceLimitsMemory: $(RESOURCE_LIMITS_MEMORY)
              resourceRequestsCpu: $(RESOURCE_REQUESTS_CPU)
              resourceRequestsMemory: $(RESOURCE_REQUESTS_MEMORY)
              mongoDbConnString: $(MONGODB_CONN_STRING)
              mongoDbName: $(MONGODB_DB_NAME)
              mongoDbCollectionName: $(MONGODB_COLLECTION_NAME)
              serviceBusConnectionString: $(SB_CONN_STRING)
              eventHubConnectionString: $(EVENT_HUB_CONN_STRING)
              streamName: $(STREAM_NAME_ECOMM)
              ingressName: $(INGRESS_NAME_ECOMM)
              egressName: $(EGRESS_NAME_ECOMM)
              nodeSelectorPool: $(NODE_SELECTOR_POOL)

## Events Stream Svc - CRM (coming soon)

## Events Stream Svc - Ezpay (coming soon)

## Events Stream Svc - Comms (coming soon)

## Events Stream Svc - Subs-Mgmt (coming soon)

## Events Stream Svc - Telemetry (coming soon)