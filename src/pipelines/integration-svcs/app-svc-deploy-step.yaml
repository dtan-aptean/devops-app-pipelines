
parameters:
  serviceConnection: ''
  svcPrincipalClientId: ''
  svcPrincipalSecret: ''
  azureTenantId: ''
  appServiceName: ''
  containerRegistryName: ''
  imageRepositoryName: ''
  appInsightsInstrumentationKey: ''
  appInsightsConnString: ''
  gqlUrlSubsMgmt: ''
  sbConnString: ''
  sbResultSubscriptionName: ''
  sbSubscriptionName: ''
  sbTopicName: ''
  signalRConnString: ''
  subsMgmtApiKey: ''
  subsMgmtTenantSecret: ''

steps:
- pwsh: |
    az login --service-principal -u $env:SP_CLIENT_ID -p $env:SP_SECRET --tenant $env:AZURE_TENANT_ID
    $tag = az acr repository show-tags --name $env:CONTAINER_REGISTRY_NAME --repository $env:IMAGE_REPOSITORY_NAME --top 1 --orderby time_desc | ConvertFrom-Json
    Write-Host "The latest tag is $tag"
    Write-Host "##vso[task.setvariable variable=latestTag;]$tag"
  displayName: Get Latest Tag
  name: GetLatestTag
  env:
    SP_CLIENT_ID: ${{ parameters.svcPrincipalClientId }}
    SP_SECRET: ${{ parameters.svcPrincipalSecret }}
    AZURE_TENANT_ID: ${{ parameters.azureTenantId }}  
    CONTAINER_REGISTRY_NAME: ${{ parameters.containerRegistryName }}
    IMAGE_REPOSITORY_NAME: ${{ parameters.imageRepositoryName }}

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    ConnectedServiceName: ${{ parameters.serviceConnection }}
    appType: 'webAppContainer'
    WebAppName: ${{ parameters.appServiceName }}
    DockerNamespace: ${{ parameters.containerRegistryName }}
    DockerRepository: ${{ parameters.imageRepositoryName }}
    DockerImageTag: $(latestTag)
    AppSettings: |    
      [
        { 
          "name": "APP_INSIGHTS_INSTRUMENTATION_KEY",
          "value": "${{ parameters.appInsightsInstrumentationKey }}",
          "slotSetting": false
        },
        {
          "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
          "value": "${{ parameters.appInsightsConnString }}",
          "slotSetting": false
        },
        {
          "name": "GQL_URL_SUBS_MGMT",
          "value": "${{ parameters.gqlUrlSubsMgmt }}",
          "slotSetting": false
        },
        {
          "name": "SB_CONN_STRING",
          "value": "${{ parameters.sbConnString }}",
          "slotSetting": false
        },
        {
          "name": "SB_RESULT_SUBSCRIPTION_NAME",
          "value": "${{ parameters.sbResultSubscriptionName }}",
          "slotSetting": false
        },
        {
          "name": "SB_SUBSCRIPTION_NAME",
          "value": "${{ parameters.sbSubscriptionName }}",
          "slotSetting": false
        },
        {
          "name": "SB_TOPIC_NAME",
          "value": "${{ parameters.sbTopicName }}",
          "slotSetting": false
        },
        {
          "name": "SIGNALR_CONN_STRING",
          "value": "${{ parameters.signalRConnString }}",
          "slotSetting": false
        },
        {
          "name": "SUBS_MGMT_API_KEY",
          "value": "${{ parameters.subsMgmtApiKey }}",
          "slotSetting": false
        },
        {
          "name": "SUBS_MGMT_TENANT_SECRET",
          "value":  "${{ parameters.subsMgmtTenantSecret }}",
          "slotSetting": false
        }        
      ]


      


