parameters:
  serviceConnection: ''
  svcPrincipalClientId: ''
  svcPrincipalSecret: ''
  azureTenantId: ''
  aksName: ''
  aksResourceGroup: ''
  containerRegistryName: ''
  imageRepositoryName: ''
  chartRepositoryName: ''
  k8sNamespace: ''
  helmReleaseName: ''
  chartName: ''
  env: ''
  replicas: ''
  resourceLimitsCpu: ''
  resourceLimitsMemory: ''
  resourceRequestsCpu: ''
  resourceRequestsMemory: ''
  appInsightsKey: ''
  wepayGrpcUrl: ''
  wepayBaseUrl: ''
  wepayApiVersion: ''
  wepayAppId: ''
  wepayAppToken: ''
  broadcastPlatformEvents: ''
  ezpayWebHookUrl: ''
  eventTopicConnectionString: ''
  processPlatformEvents: ''
  processNotificationEvents: ''
  serviceBusConnectionString: ''
  payfacTopicConnectionString: ''
  platformEventsTopic: ''
  payfacNotificationTopic: ''
  payfacNotificationSubscription: ''

steps:
- pwsh: |
    $env:HELM_EXPERIMENTAL_OCI = 1

    az login --service-principal -u $env:SP_CLIENT_ID -p $env:SP_SECRET --tenant $env:AZURE_TENANT_ID

    $fullRegistryName = "$env:CONTAINER_REGISTRY_NAME.azurecr.io"

    $env:SP_SECRET | helm registry login $fullRegistryName `
      --username $env:SP_CLIENT_ID `
      --password-stdin

    $latestHelmChart = az acr repository show-tags `
      --name $env:CONTAINER_REGISTRY_NAME `
      --repository $env:CHART_REPOSITORY_NAME `
      --top 1 `
      --orderby time_desc | ConvertFrom-Json

    $latestTag = az acr repository show-tags --name $env:CONTAINER_REGISTRY_NAME --repository $env:IMAGE_REPOSITORY_NAME --top 1 --orderby time_desc | ConvertFrom-Json
    $imageRepository = "$env:CONTAINER_REGISTRY_NAME.azurecr.io/$env:CHART_NAME"

    Write-Host ""
    $fullChartName = "$env:CONTAINER_REGISTRY_NAME.azurecr.io" + "/" + $env:CHART_REPOSITORY_NAME + ":" + $latestHelmChart
    Write-Host "fullChartName: $fullChartName"

    helm chart pull $fullChartName

    Write-Host ""
    helm chart export $fullChartName --destination .

    @"
    image:
      repository: $imageRepository
      tag: $latestTag

    commonLabels:
      env: $env:ENV

    deployment:
      replicas: $env:REPLICAS

    pod:
      resources:
        limits:
          cpu: $env:RESOURCE_LIMITS_CPU
          memory: $env:RESOURCE_LIMITS_MEMORY
        requests:
          cpu: $env:RESOURCE_REQUESTS_CPU
          memory: $env:RESOURCE_REQUESTS_MEMORY

    config:
      serviceBus:
        connectionString: "$env:SB_CONN_STRING"
        eventTopicConnectionString: "$env:SB_PLATFORM_EVENTS_TOPIC_CONN_STRING" 
        payfacTopicConnectionString: "$env:SB_PAYFAC_NOTIFICATIONS_TOPIC_CONN_STRING"
        platformEventsTopic: "$env:SB_PLATFORM_EVENTS_TOPIC"
        payfacNotificationSubscription: "$env:SB_PAYFAC_NOTIFICATIONS_SUBSCRIPTION"
        payfacNotificationTopic: "$env:SB_PAYFAC_NOTIFICATIONS_TOPIC"
      appInsights:
        instrumentationKey: "$env:APP_INSIGHTS_INSTRUMENTATION_KEY"
      wepay:
        baseUrl: "$env:WEPAY_BASE_URL"
        grpcUrl: "$env:GRPC_URL_WEPAY_INTEGRATION"
        apiVersion: "$env:WEPAY_API_VERSION"
        appID: "$env:WEPAY_APP_ID"
        appToken: "$env:WEPAY_APP_TOKEN"
      ezpayWebHookUrl: "$env:EZPAY_WEBHOOK_URL"
      processPlatformEvents: $env:PROCESS_PLATFORM_EVENTS
      processNotificationEvents: $env:PROCESS_NOTIFICATION_EVENTS
      broadcastPlatformEvents: "$env:BROADCAST_PLATFORM_EVENTS"

    "@ | Out-File -FilePath ./deploy-values.yaml

    Write-Host ""
    Write-Host "Helm deploy prep complete!"
  displayName: Prep Helm Deploy
  name: prepHelmDeploy
  workingDirectory: $(System.DefaultWorkingDirectory)
  failOnStderr: true
  env:
    SP_CLIENT_ID: ${{ parameters.svcPrincipalClientId }}
    SP_SECRET: ${{ parameters.svcPrincipalSecret }}
    AZURE_TENANT_ID: ${{ parameters.azureTenantId }}
    CONTAINER_REGISTRY_NAME: ${{ parameters.containerRegistryName }}
    IMAGE_REPOSITORY_NAME: ${{ parameters.imageRepositoryName }}
    CHART_REPOSITORY_NAME: ${{ parameters.chartRepositoryName }}
    CHART_NAME: ${{ parameters.chartName }}
    ENV: ${{ parameters.env }}
    REPLICAS: ${{ parameters.replicas }}
    RESOURCE_LIMITS_CPU: ${{ parameters.resourceLimitsCpu }}
    RESOURCE_LIMITS_MEMORY: ${{ parameters.resourceLimitsMemory }}
    RESOURCE_REQUESTS_CPU: ${{ parameters.resourceRequestsCpu }}
    RESOURCE_REQUESTS_MEMORY: ${{ parameters.resourceRequestsMemory }}
    APP_INSIGHTS_INSTRUMENTATION_KEY: ${{ parameters.appInsightsKey }}
    GRPC_URL_WEPAY_INTEGRATION: ${{ parameters.wepayGrpcUrl }}
    WEPAY_BASE_URL: ${{ parameters.wepayBaseUrl }}
    WEPAY_API_VERSION: ${{ parameters.wepayApiVersion }}
    WEPAY_APP_ID: ${{ parameters.wepayAppId }}
    WEPAY_APP_TOKEN: ${{ parameters.wepayAppToken }}
    EZPAY_WEBHOOK_URL: ${{ parameters.ezpayWebHookUrl }}
    SB_CONN_STRING: ${{ parameters.serviceBusConnectionString }}
    SB_PLATFORM_EVENTS_TOPIC_CONN_STRING: ${{ parameters.eventTopicConnectionString }}
    SB_PAYFAC_NOTIFICATIONS_TOPIC_CONN_STRING: ${{ parameters.payfacTopicConnectionString }}
    SB_PLATFORM_EVENTS_TOPIC: ${{ parameters.platformEventsTopic }}
    SB_PAYFAC_NOTIFICATIONS_SUBSCRIPTION: ${{ parameters.payfacNotificationSubscription }}
    SB_PAYFAC_NOTIFICATIONS_TOPIC: ${{ parameters.payfacNotificationTopic }}
    PROCESS_PLATFORM_EVENTS: ${{ parameters.processPlatformEvents }}
    PROCESS_NOTIFICATION_EVENTS: ${{ parameters.processNotificationEvents }}
    BROADCAST_PLATFORM_EVENTS: ${{ parameters.broadcastPlatformEvents }}

- task: Kubernetes@1
  displayName: Kubectl Version
  name: kubectlVersion
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: ${{ parameters.serviceConnection }}
    azureResourceGroup: ${{ parameters.aksResourceGroup }}
    kubernetesCluster: ${{ parameters.aksName }}
    useClusterAdmin: true
    namespace: ${{ parameters.k8sNamespace }}
    command: 'version'
    arguments: '--short'

- task: HelmInstaller@1
  displayName: Helm Installer
  name: helmInstaller
  inputs:
    helmVersionToInstall: latest

- task: HelmDeploy@0
  displayName: Helm Deploy
  name: helmDeploy
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: ${{ parameters.serviceConnection }}
    azureResourceGroup: ${{ parameters.aksResourceGroup }}
    kubernetesCluster: ${{ parameters.aksName }}
    useClusterAdmin: true
    namespace: ${{ parameters.k8sNamespace }}
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: ./${{ parameters.chartName }}
    releaseName: ${{ parameters.helmReleaseName }}
    valueFile: ./deploy-values.yaml
    install: true
    waitForExecution: false
    failOnStderr: false
